@page "/topics"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using OnlineDebate.Domain
@using OnlineDebate.Data
@using Microsoft.AspNetCore.Authorization
@implements IAsyncDisposable
@inject IDbContextFactory<OnlineDebate.Data.OnlineDebateContext> DbFactory
@attribute [Authorize(Roles = "Administrator, User")]
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Index</PageTitle> @*Index Page*@

<style>
    body {
        background-color: lightyellow;
    }

    .kebab-menu {
        position: relative;
        display: inline-block;
    }

    .kebab-btn {
        font-size: 24px;
        background: none;
        border: none;
        color: #333;
        cursor: pointer;
    }

    .kebab-dropdown {
        display: none;
        position: absolute;
        top: 25px;
        right: 0;
        background-color: white;
        min-width: 160px;
        box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
        z-index: 1;
        border-radius: 4px;
    }

        .kebab-dropdown a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

            .kebab-dropdown a:hover {
                background-color: #ddd;
            }

        .kebab-dropdown.show {
            display: block;
        }
</style>

<h1 style="font-family:Jacquard">Debates</h1>



<QuickGrid Class="table" Items="context.Topic">
    <PropertyColumn Property="topic => topic.TopicName" Title="Topic" />
    <PropertyColumn Property="topic => topic.TopicCategory" Title="Category" />
    <PropertyColumn Property="topic => topic.TopicDescription" Title="Description" />
    <PropertyColumn Property="topic => topic.TopicRules" Title="Rules" />
    <PropertyColumn Property="topic => topic.OnlineDebateUser.FirstName" Title="User" />
    <PropertyColumn Property="topic => topic.DateCreated" Title="Date Created" />

    <TemplateColumn Context="topic">
        <a href="@($"topics/details?id={topic.Id}")">Details</a> |
        @if (topic.OnlineDebateUser.FirstName == currentUserId || IsAdmin)
        {
            <a href="@($"topics/edit?id={topic.Id}")">Edit</a><span> | </span>
            <a href="@($"topics/delete?id={topic.Id}")">Delete</a><span> | </span>
        }
        <a href="@($"arguments?topicId={topic.Id}")">View Arguments</a>
    </TemplateColumn>
</QuickGrid>

<NavLink class="nav-link" href="Topics/Create">
    <button style="background-color:mediumseagreen; color:white; border-radius:200px; width:150px">Create New</button>
</NavLink>




@code {
    private OnlineDebateContext context = default!;
    private string currentUserId = string.Empty;
    private bool IsAdmin = false;
    private int? activeMenu = null;

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        currentUserId = user.Identity.Name?.Split('@')[0] ?? "User";
        IsAdmin = user?.IsInRole("Administrator") ?? false;
        var arguments = context.Topic
        .Include(a => a.OnlineDebateUser)
        .ToList();
    }

    private void ToggleMenu(int topicId)
    {
        // Toggle the visibility of the menu
        activeMenu = activeMenu == topicId ? null : topicId;
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
